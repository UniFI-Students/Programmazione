boolean tictactoe(int[][] a) {
	int n = a.length;
	
	for (int i=0; i<n; ++i)
	{
		boolean isGoodIString = IsPlayer(a[i][0]);
		for (int j=1; j<n && isGoodIString; ++j)
			if (!IsEqualTicTacToe(a[i][j], a[i][j-1])) isGoodIString = false;
		
		if (isGoodIString) return true;
		
		boolean isGoodIColumn = IsPlayer(a[0][i]);
		for (int j=1; j<n && isGoodIColumn; ++j)
		  if (!IsEqualTicTacToe(a[j][i], a[j-1][i])) isGoodIColumn = false;
		  
		if (isGoodIColumn) return true;
	}
	
	boolean isGoodDiag = IsPlayer(a[0][0]);
	for (int i=1; i<n && isGoodDiag; ++i) 
		if (!IsEqualTicTacToe(a[i][i], a[i-1][i-1])) isGoodDiag = false;
	
	if (isGoodDiag) return true;
		
	boolean isGoodReverseDiag = IsPlayer(a[n - 1][0]);
	for (int i=1; i<n && isGoodReverseDiag; ++i)
		if (!IsEqualTicTacToe(a[n - i - 1][i], a[n - i][i - 1])) isGoodReverseDiag = false;
	if (isGoodReverseDiag) return true;
	
	return false;
}

boolean IsEqualTicTacToe(int a, int b)
{
	return a==b && IsPlayer(a);
}

boolean IsPlayer(int a)
{
	return a==1 || a==2;
}